name: musl

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

jobs:
  musl-cross-build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        ver:
          - { onnx: v1.15.1, musl: 11.3.1 }
        arch:
          [
            aarch64-linux-musl,
            aarch64_be-linux-musl,
            arm-linux-musleabi,
            arm-linux-musleabihf,
            armeb-linux-musleabi,
            armeb-linux-musleabihf,
            armel-linux-musleabi,
            armel-linux-musleabihf,
            armv5l-linux-musleabi,
            armv5l-linux-musleabihf,
            armv6-linux-musleabi,
            armv6-linux-musleabihf,
            armv7l-linux-musleabihf,
            armv7m-linux-musleabi,
            armv7r-linux-musleabihf,
            i486-linux-musl,
            i686-linux-musl,
            m68k-linux-musl,
            microblaze-linux-musl,
            microblazeel-linux-musl,
            mips-linux-musl,
            mips-linux-muslsf,
            mips-linux-musln32sf,
            mips64-linux-musl,
            mips64-linux-musln32,
            mips64-linux-musln32sf,
            mips64el-linux-musl,
            mips64el-linux-musln32,
            mips64el-linux-musln32sf,
            mipsel-linux-musl,
            mipsel-linux-musln32,
            mipsel-linux-musln32sf,
            mipsel-linux-muslsf,
            or1k-linux-musl,
            powerpc-linux-musl,
            powerpc-linux-muslsf,
            powerpc64-linux-musl,
            powerpc64le-linux-musl,
            powerpcle-linux-musl,
            powerpcle-linux-muslsf,
            riscv32-linux-musl,
            riscv64-linux-musl,
            s390x-linux-musl,
            sh2-linux-musl,
            sh2-linux-muslfdpic,
            sh2eb-linux-musl,
            sh2eb-linux-muslfdpic,
            sh4-linux-musl,
            sh4eb-linux-musl,
            x86_64-linux-musl,
            x86_64-linux-muslx32,
          ]

    name: musl-${{ matrix.arch }}

    env:
      BUILD_SCRIPT: build-onnxruntime-musl.sh
      BUILD_OPTIONS: onnxruntime_options-${{ matrix.ver.onnx }}.txt
      SHARED_PKG_NAME: onnxruntime-${{ matrix.ver.onnx }}-${{ matrix.arch }}-shared
      STATIC_PKG_NAME: onnxruntime-${{ matrix.ver.onnx }}-${{ matrix.arch }}-static

    steps:
      # 检出代码
      - uses: actions/checkout@v3

      # 部署musl
      - name: deploy musl
        run: |
          wget https://github.com/benjaminwan/musl-cross-builder/releases/download/${{ matrix.ver.musl }}/${{ matrix.arch }}-${{ matrix.ver.musl }}.7z -O ${{ matrix.arch }}.7z
          7z x ${{ matrix.arch }}.7z -aoa
          mv ${{ matrix.arch }}/ /opt/${{ matrix.arch }}/

      # 检出onnxruntime
      - name: checkout onnxruntime
        uses: actions/checkout@v3
        with:
          repository: microsoft/onnxruntime
          path: onnxruntime-${{ matrix.ver.onnx }}
          ref: ${{ matrix.ver.onnx }}
          submodules: recursive

      - name: git submodule sync
        run: |
          cd onnxruntime-${{ matrix.ver.onnx }}
          git submodule sync --recursive
          git submodule update --init --recursive

      # 复制
      - name: copy
        run: |
          cp ${{ env.BUILD_SCRIPT }} onnxruntime-${{ matrix.ver.onnx }}
          cp ${{ env.BUILD_OPTIONS }} onnxruntime-${{ matrix.ver.onnx }}
          wget https://github.com/benjaminwan/musl-cross-builder/raw/main/musl-cross.toolchain.cmake -O musl-cross.toolchain.cmake
          cp musl-cross.toolchain.cmake onnxruntime-${{ matrix.ver.onnx }}

      - name: build
        run: |
          cd onnxruntime-${{ matrix.ver.onnx }}
          chmod a+x ${{ env.BUILD_SCRIPT }}
          ./${{ env.BUILD_SCRIPT }} ${{ matrix.arch }} /opt/${{ matrix.arch }}

      # install文件夹改名linux，并使用7z压缩
      - name: 7zip
        run: |
          cp -r onnxruntime-${{ matrix.ver.onnx }}/build-Linux/install linux
          7z a ${{ env.SHARED_PKG_NAME }}.7z linux
          rm -r -f linux
          cp -r onnxruntime-${{ matrix.ver.onnx }}/build-Linux/install-static linux
          7z a ${{ env.STATIC_PKG_NAME }}.7z linux
          rm -r -f linux

      # 上传artifact
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.SHARED_PKG_NAME }}
          path: ${{ env.SHARED_PKG_NAME }}.7z

      # 上传artifact
      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.STATIC_PKG_NAME }}
          path: ${{ env.STATIC_PKG_NAME }}.7z
      # 获取所有的git log和tag
      - name: Unshallow
        run: git fetch --prune --unshallow

      # 获取git log 从 previousTag 到 lastTag
      - name: Get git log
        id: git-log
        run: |
          previousTag=$(git describe --abbrev=0 --tags `git rev-list --tags --skip=1 --max-count=1`)
          lastTag=$(git describe --abbrev=0 --tags)
          echo "previousTag:$previousTag ~ lastTag:$lastTag"
          log=$(git log $previousTag..$lastTag --pretty=format:'- %cd %an: %s\n' --date=format:'%Y-%m-%d %H:%M:%S')
          echo "$log"
          echo "log_state="$log"" >> $GITHUB_ENV

      # 创建Changelog文件 triggered by git tag push
      - name: Generate Changelog
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo -e '${{ env.log_state }}' > release.md

      # 创建release 上传release
      # https://github.com/marketplace/actions/create-release
      - name: Create release and upload-archive
        uses: ncipollo/release-action@v1
        with:
          prerelease: false
          bodyFile: release.md
          artifacts: ${{ env.SHARED_PKG_NAME }}.7z, ${{ env.STATIC_PKG_NAME }}.7z
          allowUpdates: true
          artifactContentType: application/x-7z-compressed
          token: ${{ secrets.GITHUB_TOKEN }}
